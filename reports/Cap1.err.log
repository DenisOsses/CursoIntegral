Traceback (most recent call last):
  File "C:\Users\denis.osses\AppData\Local\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\denis.osses\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\denis.osses\AppData\Local\anaconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\denis.osses\AppData\Local\anaconda3\Lib\asyncio\base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\denis.osses\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\denis.osses\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\denis.osses\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Activaci√≥n segura de matplotlib para Thebe
try:
    get_ipython().run_line_magic('matplotlib', 'inline')
except:
    pass

import numpy as np
import matplotlib.pyplot as plt
import ipywidgets as widgets
from ipywidgets import interact, IntSlider, FloatSlider, Dropdown
from IPython.display import display

functions = {
    'x^2': lambda x: x**2,
    'sen(x)': lambda x: np.sin(x),
    'e^x': lambda x: np.exp(x),
    'cos(x)': lambda x: np.cos(x)
}

def plot_riemann_sums(a, b, N, selected_function):
    f = functions[selected_function]
    n = 10  # densidad de puntos para la curva suave

    x = np.linspace(a, b, N+1)
    y = f(x)

    X = np.linspace(a, b, n*N+1)
    Y = f(X)

    plt.figure(figsize=(15, 5))

    plt.subplot(1, 3, 1)
    plt.plot(X, Y, 'b')
    x_left = x[:-1]
    y_left = y[:-1]
    plt.plot(x_left, y_left, 'b.', markersize=10)
    plt.bar(x_left, y_left, width=(b-a)/N, alpha=0.2, align='edge', edgecolor='b')
    plt.title(f'Left Riemann Sum, N = {N}')

    plt.subplot(1, 3, 2)
    plt.plot(X, Y, 'b')
    x_mid = (x[:-1] + x[1:])/2
    y_mid = f(x_mid)
    plt.plot(x_mid, y_mid, 'b.', markersize=10)
    plt.bar(x_mid, y_mid, width=(b-a)/N, alpha=0.2, edgecolor='b')
    plt.title(f'Midpoint Riemann Sum, N = {N}')

    plt.subplot(1, 3, 3)
    plt.plot(X, Y, 'b')
    x_right = x[1:]
    y_right = y[1:]
    plt.plot(x_right, y_right, 'b.', markersize=10)
    plt.bar(x_right, y_right, width=-(b-a)/N, alpha=0.2, align='edge', edgecolor='b')
    plt.title(f'Right Riemann Sum, N = {N}')

    plt.tight_layout()
    plt.show()

interact(plot_riemann_sums,
         a=FloatSlider(min=-10, max=10, step=0.1, value=0, description='a:'),
         b=FloatSlider(min=-10, max=10, step=0.1, value=5, description='b:'),
         N=IntSlider(min=1, max=50, step=1, value=10, description='N:'),
         selected_function=Dropdown(options=functions.keys(), value='x^2', description='Funci√≥n:')
);


```{admonition} Ejercicio 
Sea la funci√≥n
------------------


[1;36m  Cell [1;32mIn[1], line 67[1;36m[0m
[1;33m    ```{admonition} Ejercicio[0m
[1;37m    ^[0m
[1;31mSyntaxError[0m[1;31m:[0m invalid syntax


